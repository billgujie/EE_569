// convert color to grayscale// input one image, output two image: average values and luminosity result// adapted from readraw.cpp file provided for this homework#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;int main(int argc, char *argv[]) //command line arguments{	// Define file pointer and variables	FILE *file;	int BytesPerPixel;	int SizeW = 256;	int SizeH = 256;		// Check for proper syntax	if (argc < 3){		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name[0] input_image.raw[1] output_image.raw[2] [BytesPerPixel = 1][3] [SizeW = 256][4] [SizeH = 256][5]" << endl;		return 0;	}		// Check if image is grayscale or color	if (argc < 4){		BytesPerPixel = 1; // default is grey image	} 	else {		BytesPerPixel = atoi(argv[3]);		// Check if size is specified		if (argc >= 6){			SizeW = atoi(argv[4]);			SizeH = atoi(argv[5]);		}	}		// Allocate image data array	unsigned char Imagedata[SizeW][SizeH][BytesPerPixel];//size of unsigned char is 0-255	unsigned char ImageQ1a1[SizeW][SizeH], ImageQ1a2[SizeW][SizeH];	if (!(file=fopen(argv[1],"rb"))) {		cout << "Cannot open file: " << argv[1] <<endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), SizeW*SizeH*BytesPerPixel, file);	fclose(file);		// Convert to grey scale	for (int i=0; i<=SizeW-1; i++){		for (int j=0; j<=SizeH-1; j++){			// Method1: average			ImageQ1a1[i][j]=(Imagedata[i][j][0]+Imagedata[i][j][1]+Imagedata[i][j][2])/3;			// Method2: luminosity			ImageQ1a2[i][j]=.21*Imagedata[i][j][0]+.72*Imagedata[i][j][1]+.007*Imagedata[i][j][2];		}	}	// Write image data (filename specified by second argument) from image data matrix	string savename=argv[2];	// Save into different file names based on argument input	savename.erase(savename.end()-4, savename.end());	if (!(file=fopen((savename+"AVG.raw").c_str(),"wb"))) {			cout << "Cannot open file: " << argv[2] << endl;			exit(1);		}		fwrite(ImageQ1a1, sizeof(unsigned char), SizeW*SizeH, file);		fclose(file);	if (!(file=fopen((savename+"LUM.raw").c_str(),"wb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fwrite(ImageQ1a2, sizeof(unsigned char), SizeW*SizeH, file);	fclose(file);	return 0;}